name: Setup Windows Tests

on:
  pull_request:

jobs:
  leia-tests:
    runs-on: ${{ matrix.os }}
    env:
      TERM: xterm
    strategy:
      fail-fast: false
      matrix:
        lando-version:
          - 3-slim
          # uncomment to test against bleeding edge cli
          # - 3-dev-slim
        leia-test:
          - examples/setup-windows
        node-version:
          - "18"
        os:
          - windows-2022
        shell:
          - bash
          # - cmd
          # - powershell

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org
          cache: npm
      - name: Install dependencies
        run: npm clean-install --prefer-offline --frozen-lockfile
      # bundle deps is needed so local plugin installation succeeds
      - name: Bundle Deps
        uses: lando/prepare-release-action@v3
        with:
          lando-plugin: true
          version: dev
          sync: false
      - name: Uninstall Docker CE
        shell: powershell
        run: |
          # uninstall docker
          Uninstall-Package -Name DockerMsftProvider
          Uninstall-Module -Name DockerMsftProvider
      - name: Install Docker Desktop
        shell: bash
        run: |
          choco install docker-desktop
      - name: Docker Debug
        shell: bash
        run: |
          docker version
      - name: Setup lando ${{ matrix.lando-version }}
        uses: lando/setup-lando@v2
        with:
          lando-version: ${{ matrix.lando-version }}
          telemetry: false
          setup: false
          dependency-check: false
      - name: Run Leia Tests
        uses: lando/run-leia-action@v2
        env:
          CORE_PLUGIN_PATH: ${{ github.workspace }}
        with:
          leia-test: "./${{ matrix.leia-test }}/README.md"
          cleanup-header: "Destroy tests"
          shell: bash
          stdin: true
