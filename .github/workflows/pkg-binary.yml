name: Package Binary

on:
  workflow_call:
    inputs:
      arch:
        default: x64
        description: The architecture to build for eg x64 | arm64
        required: true
        type: string
      edge:
        default: false
        description: Whether to build on the edge channel or not
        required: false
        type: boolean
      filename:
        default: lando
        description: The name of the resulting binary
        required: false
        type: string
      fatcore:
        default: false
        description: Whether to build a fat binary or not
        required: false
        type: boolean
      node-version:
        default: "20"
        description: The node version to build for eg 16 | 18 | 20
        required: true
        type: string
      os:
        default: linux
        description: The os to build for eg linux | macos | win
        required: true
        type: string

jobs:
  pkg-binary:
    runs-on: ${{ inputs.arch == 'arm64' && 'macos-14' || 'ubuntu-24.04' }}
    env:
      TERM: xterm
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install node ${{ inputs.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: npm
      - name: Install dependencies
        run: npm clean-install --prefer-offline --frozen-lockfile --production
      - name: Install fatcore
        if: inputs.fatcore == true
        run: scripts/fatcore-install.sh ${{ inputs.edge == true && '--edge' || '' }}
      - name: Switch to edge channel
        if: inputs.edge == true
        run: |
          sed -i.bak "s/^channel: stable/channel: edge/" config.yml
          rm -rf config.yml.bak
      - name: Prepare Release
        uses: lando/prepare-release-action@v3
        with:
          version: dev
          sync: false
      - name: Package into binary
        uses: lando/pkg-action@v6
        with:
          entrypoint: bin/lando
          filename: ${{ inputs.filename }}
          node-version: ${{ inputs.node-version }}
          os: ${{ inputs.os }}
          options: --options dns-result-order=ipv4first
          pkg: "@yao-pkg/pkg@5.16.1"
          upload-key: "packaged-${{ inputs.filename }}-${{ inputs.os }}-${{ inputs.arch }}${{ inputs.fatcore == false && '-slim' || '' }}-${{ github.sha }}"
      - name: Ensure version
        if: (inputs.os == 'linux' && runner.os == 'Linux') || (inputs.os == 'macos' && runner.os == 'macOS')
        run: ./dist/${{ inputs.filename }} version --all
      - name: Ensure ipv4first
        if: (inputs.os == 'linux' && runner.os == 'Linux') || (inputs.os == 'macos' && runner.os == 'macOS')
        run: ./dist/${{ inputs.filename }} config --path cli.args | grep dns-result-order=ipv4first
      - name: Ensure channel
        if: (inputs.os == 'linux' && runner.os == 'Linux') || (inputs.os == 'macos' && runner.os == 'macOS')
        run: ./dist/${{ inputs.filename }} config --path channel | grep ${{ inputs.edge == true && 'edge' || 'stable' }}
      - name: Ensure slimcore
        if: ((inputs.os == 'linux' && runner.os == 'Linux') || (inputs.os == 'macos' && runner.os == 'macOS')) && inputs.fatcore == false
        run: ./dist/${{ inputs.filename }} config --path fatcore | grep false
      - name: Ensure fatcore
        if: ((inputs.os == 'linux' && runner.os == 'Linux') || (inputs.os == 'macos' && runner.os == 'macOS')) && inputs.fatcore == true
        run: |
          ./dist/${{ inputs.filename }} config --path fatcore | grep true
          ./dist/${{ inputs.filename }} config | grep -q "node_modules/@lando/wordpress"
